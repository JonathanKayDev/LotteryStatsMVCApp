@using LotteryStatsMVCApp.Models.Enums
@model LotteryStatsMVCApp.Models.ViewModels.GameStatsViewModel

@{
    ViewData["Title"] = "Game Stats";

    List<BallModel> freqMainBall = Model.MainBallStats.OrderByDescending(x => x.Frequency).ToList();
    List<BallModel> absentMainBall = Model.MainBallStats.OrderByDescending(x => x.Absence).ToList();
    List<BallModel> freqBonusBall = new();
    List<BallModel> absentBonusBall = new();

    if (Model.NumberOfBonusBalls > 0)
    {
        freqBonusBall = Model.BonusBallStats.OrderByDescending(x => x.Frequency).ToList();
        absentBonusBall = Model.BonusBallStats.OrderByDescending(x => x.Absence).ToList();
    }

    string ballImage = "";
    string pageTitle = "";
    string bonusTitle = "";

    switch (Model.GameName)
    {
        case nameof(Games.Euromillions):
            ballImage = "/img/LottoBall_E.svg";
            pageTitle = "Euromillions";
            bonusTitle = "Lucky Stars";
            break;
        case nameof(Games.EuromillionsHotpicks):
            ballImage = "/img/LottoBall_EH.svg";
            pageTitle = "Euromillions Hotpicks";
            break;
        case nameof(Games.Lotto):
            ballImage = "/img/LottoBall_L.svg";
            pageTitle = "Lotto";
            bonusTitle = "Bonus Ball";
            break;
        case nameof(Games.LottoHotpicks):
            ballImage = "/img/LottoBall_LH.svg";
            pageTitle = "Lotto Hotpicks";
            break;
        case nameof(Games.SetForLife):
            ballImage = "/img/LottoBall_S.svg";
            pageTitle = "Set for Life";
            bonusTitle = "Life Ball";
            break;
        case nameof(Games.Thunderball):
            ballImage = "/img/LottoBall_T.svg";
            pageTitle = "Thunderball";
            bonusTitle = "Thunderball";
            break;
        default:
            ballImage = "/img/LottoBall.svg";
            break;
    }

}

<h1 class="mb-4">@pageTitle</h1>
<hr />
<!-- Common Numbers -->
<h3 class="mt-2 mb-4 text-primary">Common Numbers</h3>
<h5 class="text-secondary">Main Balls</h5>
<div class="row mt-2" style="max-width: 800px">
    @for (var i = 0; i < Model.NumberOfMainBalls; i++)
    {
        <div class="col-2">
            <div class="ball-container">
                <img src=@ballImage style="width: 100%" class="ball-image" />
                <div class="ball-text text-dark">@freqMainBall[i].Number.ToString()</div>
            </div>
        </div>
    }
</div>
<div class="row mt-2" style="max-width: 800px; font-size:0.75rem;">
    <p class="mb-0">Frequency:</p>
    @for (var i = 0; i < Model.NumberOfMainBalls; i++)
    {
        <div class="col-2 text-center">@freqMainBall[i].Frequency.ToString()</div>
    }
</div>

@if (Model.NumberOfBonusBalls > 0)
{
    <h5 class="mt-4 text-secondary">@bonusTitle</h5>

    <div class="row" style="max-width: 800px">
        @for (var i = 0; i < Model.NumberOfBonusBalls; i++)
        {
            <div class="col-2 ball-container">
                <img src=@ballImage style="width: 100%" />
                <div class="ball-text text-dark">@freqBonusBall[i].Number.ToString()</div>
            </div>
        }
    </div>
    <div class="row mt-2" style="max-width: 800px; font-size:0.75rem;">
        <p class="mb-0">Frequency:</p>
        @for (var i = 0; i < Model.NumberOfBonusBalls; i++)
        {
            <div class="col-2 text-center">@freqBonusBall[i].Frequency.ToString()</div>
        }
    </div>
}
<!-- End of Common Numbers -->
<hr />
<!-- Absent Numbers -->
<h3 class="mt-4 mb-4 text-primary">Absent Numbers</h3>
<h5 class="text-secondary">Main Balls</h5>
<div class="row mt-2" style="max-width: 800px">
    @for (var i = 0; i < Model.NumberOfMainBalls; i++)
    {
        <div class="col-2 ball-container">
            <img src=@ballImage style="width: 100%" />
            <div class="ball-text text-dark">@absentMainBall[i].Number.ToString()</div>
        </div>
    }
</div>
<div class="row mt-2" style="max-width: 800px; font-size:0.75rem;">
    <p class="mb-0">Absence:</p>
    @for (var i = 0; i < Model.NumberOfMainBalls; i++)
    {
        <div class="col-2 text-center">@absentMainBall[i].Absence.ToString()</div>
    }
</div>

@if (Model.NumberOfBonusBalls > 0)
{
    <h5 class="mt-4 text-secondary">@bonusTitle</h5>

    <div class="row" style="max-width: 800px">
        @for (var i = 0; i < Model.NumberOfBonusBalls; i++)
        {
            <div class="col-2 ball-container">
                <img src=@ballImage style="width: 100%" />
                <div class="ball-text text-dark">@absentBonusBall[i].Number.ToString()</div>
            </div>
        }
    </div>
    <div class="row mt-2" style="max-width: 800px; font-size:0.75rem;">
        <p class="mb-0">Absence:</p>
        @for (var i = 0; i < Model.NumberOfBonusBalls; i++)
        {
            <div class="col-2 text-center">@absentBonusBall[i].Absence.ToString()</div>
        }
    </div>
}
<!-- End of Absent Numbers -->
<hr />

<div class="mt-4 pt-4 mb-4 fst-italic">
    <p class="mb-0">Based on the last @Model.NumberOfGames games.</p>
    <p>Last draw date: @Model.LastDrawDate</p>
</div>

